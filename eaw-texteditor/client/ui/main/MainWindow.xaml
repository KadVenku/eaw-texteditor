<Controls:MetroWindow x:Class="eaw_texteditor.client.ui.main.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      mc:Ignorable="d"
                      Title="Star Wars: Empire at War - Text Editor"
                      Height="600" Width="800"
                      WindowStartupLocation="CenterScreen"
                      ResizeMode="CanResizeWithGrip"
                      BorderBrush="{DynamicResource AccentColorBrush}"
                      BorderThickness="1"
                      SaveWindowPosition="True"
                      Icon="/eaw-texteditor;component/eaw-icon.ico"
                      MinWidth="800"
                      MinHeight="600"
                      VerticalAlignment="Bottom"
                      Closing="MainWindow_OnClosing"
                      RightWindowCommandsOverlayBehavior="Never">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="_importButton" Content="{iconPacks:FontAwesome FileImportSolid}"
                    ToolTip="Import from file ..." Click="_importExecuteButton_Click" />
            <Button x:Name="_exportButton" Content="{iconPacks:FontAwesome FileExportSolid}"
                    ToolTip="Export to file ..." Click="_exportExecuteButton_Click"
                    IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <ToggleButton x:Name="_flyoutButton" Content="{iconPacks:FontAwesome ToolboxSolid}"
                          ToolTip="Opens the tools window ..."
                          IsChecked="{Binding ElementName=_toolsFlyout, Path=IsOpen}" Cursor="Hand" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="_toolsFlyout" Header="Toolbox" Position="Right" Theme="Adapt" MinWidth="300">
                <ScrollViewer>
                    <Grid Margin="20px">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="Bold" FontSize="14" Padding="0,0,0,0">Selected Language</TextBlock>
                        <ComboBox Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" IsReadOnly="True"
                                  Margin="10,0,0,0"
                                  ItemsSource="{Binding Path=Languages, Mode=OneWay, UpdateSourceTrigger=LostFocus}"
                                  SelectedItem="{Binding Path=SelectedLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Controls:ToggleSwitch x:Name="_todoToggle" Grid.Column="0" Grid.Row="2" Padding="0,20,0,0"
                                               Header="Todo View"
                                               ToolTip="Activating the Todo View will filter the table view in such a way that it will only items flagged as TODO."
                                               IsChecked="{Binding Path=IsTodoFilterActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                               IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Column="0" Grid.Row="3" FontWeight="Bold" FontSize="14" Padding="0,20,0,0">Search</TextBlock>
                        <Grid x:Name="_searchFormGrid" Grid.Column="0" Grid.Row="4"
                              IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <TextBox x:Name="_searchBox" Grid.Column="0" Grid.Row="0" VerticalAlignment="Top"
                                     Grid.ColumnSpan="3" Margin="10,2,10,0"
                                     Text="{Binding Path=SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Grid Grid.Column="3" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="_refreshButton" Content="{iconPacks:FontAwesome SearchSolid}"
                                        Grid.Column="0" Click="OnRefreshClick" ToolTip="Search/Refresh" />
                                <Button x:Name="_clearButton" Content="{iconPacks:FontAwesome TrashSolid}"
                                        Grid.Column="1" Click="OnClearClick" ToolTip="Clear..." />
                            </Grid>
                            <RadioButton Content="Search keys" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3"
                                         Margin="10,0,0,0"
                                         IsChecked="{Binding Path=IsKeySearchChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <RadioButton Content="Search translation" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3"
                                         Margin="10,0,0,0"
                                         IsChecked="{Binding Path=IsValueSearchChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <TextBlock Grid.Column="0" Grid.Row="5" FontWeight="Bold" FontSize="14" Padding="0,20,0,0">Advanced Search</TextBlock>
                        <Controls:ToggleSwitch Grid.Column="0" Grid.Row="6"
                                               IsChecked="{Binding Path=IsAdvancedSearchCheckBoxChecked, Mode=TwoWay}"
                                               Checked="AdvancedSearchCheckBoxCheckedChanged"
                                               Unchecked="AdvancedSearchCheckBoxCheckedChanged"
                                               IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Grid x:Name="_advancedSearchFormGrid" Grid.Column="0" Grid.Row="7" IsEnabled="False"
                              Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="_matchCaseCheckBox" Content="Match case" Margin="10,0,0,0"
                                      Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"
                                      IsChecked="{Binding Path=IsMatchCaseChecked, Mode=TwoWay}" />
                            <RadioButton x:Name="_normalCheckBox" Content="Simple Search" Margin="10,0,0,0"
                                         Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3"
                                         IsChecked="{Binding Path=UseSimpleSearch, Mode=TwoWay}" />
                            <RadioButton x:Name="_wildCardCheckBox" Content="Wildcard Search" Margin="10,0,0,0"
                                         Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3"
                                         IsChecked="{Binding Path=UseWildCardSearch, Mode=TwoWay}" />
                            <RadioButton x:Name="_regExSearch" Content="RegEx Search" Margin="10,0,0,0" Grid.Column="0"
                                         Grid.Row="3" Grid.ColumnSpan="3"
                                         IsChecked="{Binding Path=UseRegExSearch, Mode=TwoWay}" />
                        </Grid>
                        <TextBlock Grid.Column="0" Grid.Row="8" FontWeight="Bold" FontSize="14" Padding="0,20,0,0">Import/Export</TextBlock>
                        <Grid x:Name="_functionsGrid" Grid.Column="0" Grid.Row="9">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button x:Name="_importFlyoutButton" Grid.Row="0" Grid.Column="0" Margin="10,5,0,5"
                                    Content="Import from file ..." ToolTip="Import from file ..."
                                    Style="{DynamicResource MetroFlatButton}" Click="_importExecuteButton_Click" />
                            <Button x:Name="_exportFlyoutButton" Grid.Row="1" Grid.Column="0" Margin="10,5,0,5"
                                    Content="Export to file ..." ToolTip="Export to file ..."
                                    Style="{DynamicResource MetroFlatButton}" Click="_exportExecuteButton_Click"
                                    IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <TextBlock Grid.Column="0" Grid.Row="10" FontWeight="Bold" FontSize="14" Padding="0,20,0,0">Data Integrity</TextBlock>
                        <Grid x:Name="_dataIntegrityGrid" Grid.Column="0" Grid.Row="11">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button x:Name="_verifyDataButton" Grid.Row="0" Grid.Column="0" Margin="10,5,0,5"
                                    Content="Verify data integrity..."
                                    ToolTip="Verifies that each loaded tranlation key has a tranlation for each loaded language."
                                    Style="{DynamicResource MetroFlatButton}" Click="_verifyIntegrityButton_Click"
                                    IsEnabled="{Binding Path=IsTranslationDataLoaded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid x:Name="_mainBoxLoadingControl" Grid.Column="0" Grid.Row="0" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Controls:ProgressRing Grid.Row="0" Grid.Column="1" IsActive="True" />
        </Grid>
        <!--<TabControl x:Name="_mainBoxTabControl" Margin="0" Grid.Column="0" Grid.Row="0">
            <TabItem x:Name="_basicTextEditorTab" Header="Basic Text Editor" >-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <DataGrid x:Name="_basicEditorDataGrid" Grid.Column="0" Grid.Row="0"
                      ItemsSource="{Binding TranslationCollection}" AutoGenerateColumns="False"
                      CanUserReorderColumns="False" SelectionUnit="FullRow"
                      MouseDoubleClick="_basicEditorDataGrid_OnDoubleClick" EnableColumnVirtualization="True"
                      IsReadOnly="True" MouseRightButtonDown="_basicEditorDataGrid_OnMouseRightButtonDown">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Icon="{iconPacks:FontAwesome EditSolid}" Header="Edit" Click="MenuItemEdit_OnClick" />
                        <MenuItem Icon="{iconPacks:FontAwesome PlusSolid}" Header="New" Click="MenuItemNew_OnClick" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key}" CanUserReorder="False" Header="Text Key"
                                        IsReadOnly="True" Width="1*">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Top" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Value}" CanUserReorder="False" Header="Translation"
                                        IsReadOnly="True" Width="3*">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                <Setter Property="TextBlock.VerticalAlignment" Value="Top" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                        Value="False" />
                                    <Condition Binding="{Binding HasChanged}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="FontWeight" Value="Bold" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                        Value="True" />
                                    <Condition Binding="{Binding HasChanged}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                        Value="True" />
                                    <Condition Binding="{Binding HasChanged}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>
        <!--</TabItem>
            <TabItem x:Name="_unitTextEditorTab" Header="Unit Text Editor" IsEnabled="False">
            </TabItem>
            <TabItem x:Name="_planetTextEditorTab" Header="Planet Text Editor" IsEnabled="False">
            </TabItem>
        </TabControl>-->
    </Grid>
</Controls:MetroWindow>